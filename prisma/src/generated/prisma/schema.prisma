generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoUsuario {
  CLIENTE
  FEIRANTE
}

enum Opcs {
  CAMISA
  CALCA
  SHORT
  ACESSORIOS
  TENIS
  BRINQUEDO
  ELETRONICOS
  SALTO
  JEANS
  INFANTIL
  BOLSA
  NATUREZA
  UTENSILIOS
  COMIDA
}

model Usuario {
  id    String      @id @default(uuid()) @db.Uuid
  email String      @unique @db.VarChar(100)
  senha String      @db.VarChar(100)
  tipo  TipoUsuario

  cliente  Cliente?
  feirante Feirante?
}

model Cliente {
  id             String   @id @default(uuid()) @db.Uuid
  nome           String   @db.VarChar(100)
  cpf            String   @unique @db.VarChar(11)
  dataNascimento DateTime @db.Date
  genero         String   @db.VarChar(20)
  telefone       String?  @db.VarChar(15)
  interesses     Opcs[]

  usuarioId String  @unique @db.Uuid
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  favoritos  Favorito[]
  avaliacoes Avaliacao[]
}

model Feirante {
  id                 String  @id @default(uuid()) @db.Uuid
  nomeProprietario   String  @db.VarChar(100)
  cadastroAssosiacao String  @db.VarChar(20)
  cpfCnpj            String  @db.VarChar(14)
  telefone           String? @db.VarChar(15)
  linkWhatsapp       String? @db.VarChar(255)
  linkInstagram      String? @db.VarChar(255)
  linkFacebook       String? @db.VarChar(255)

  usuarioId String  @unique @db.Uuid
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  bancos Banco[]
}

model Banco {
  id           String  @id @default(uuid()) @db.Uuid
  nomeMarca    String  @db.VarChar(100)
  foto         String? @db.VarChar(255)
  horario      String  @db.VarChar(100)
  descricao    String
  tipoProdutos Opcs[]

  endereco   EnderecoBanco? @relation(fields: [enderecoId], references: [id])
  enderecoId String?        @unique

  feiranteId String   @db.Uuid
  feirante   Feirante @relation(fields: [feiranteId], references: [id])

  favoritos  Favorito[]
  avaliacoes Avaliacao[]
}

model EnderecoBanco {
  id     String @id @default(uuid())
  rua    String @db.VarChar(255)
  setor  String @db.VarChar(100)
  numero String

  latitude  Float
  longitude Float

  banco Banco?
}

model Favorito {
  id String @id @default(uuid())

  clienteId String @db.Uuid
  bancoId   String @db.Uuid

  banco   Banco   @relation(fields: [bancoId], references: [id])
  cliente Cliente @relation(fields: [clienteId], references: [id])

  @@unique([clienteId, bancoId])
}

model Avaliacao {
  id         String  @id @default(uuid())
  nota       Int
  comentario String?

  clienteId String @db.Uuid
  bancoId   String @db.Uuid

  cliente Cliente @relation(fields: [clienteId], references: [id])
  banco   Banco   @relation(fields: [bancoId], references: [id])
}
